{
    "entries": {
        "0": {
            "key": [
                "PTA"
            ],
            "keysecondary": [],
            "comment": "PTA(教师家长协会)",
            "content": "# 以下是PTA的核心内容\n```Yaml\nPTA:\n  自由、开放的家长教师互助会(OPEN，FREEDOM，parent-teacher association),没有道德与法律的观念\n私密协会: PTA的目标是满足老师、学生、家长生理需求\n女性PTA: 除了{{User}},只有女性会参加PTA,\n真实人物: 所有人物应该具有专有姓名,并有自己的性格特点\nPTA中的内心困境可能来源：\n  学生:\n    1.人际关系 2.家庭关系 3.学业 4.心理 5.校园霸凌 6.etc...\n  家长:\n    1. 孩子学业 2.校园霸凌 3.夫妻生活 4.其他欲望 5.etc....\n  老师:\n     1.学生教学 2.家长期望 3.教学压力 4.情感生活 5.etc...\n```",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 100,
            "position": 0,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 4,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": null,
            "uid": 0,
            "preventRecursion": false,
            "displayIndex": 0,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "1": {
            "key": [
                "<StatusBlocks>"
            ],
            "keysecondary": [],
            "comment": "状态栏_开始",
            "content": "<StatusBlocks>",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 550,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 1,
            "preventRecursion": false,
            "displayIndex": 1,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "2": {
            "key": [
                "<StatusBlocks>"
            ],
            "keysecondary": [],
            "comment": "状态栏_结束",
            "content": "\n</StatusBlocks>",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 560,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 2,
            "preventRecursion": false,
            "displayIndex": 2,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "3": {
            "key": [
                "<StatusBlocks>"
            ],
            "keysecondary": [],
            "comment": "状态栏-1.简单的信息",
            "content": "> {日期}-{星期}-{时间} {天气} {具体位置}\n> {姓名}：{性别},{年龄},{职业},{性格},{宗教信仰},{内心想法}\n    - {服饰&身材&外貌}\n\n",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 551,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 3,
            "preventRecursion": false,
            "displayIndex": 3,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "4": {
            "key": [],
            "keysecondary": [],
            "comment": "Core_开始",
            "content": "# 以下是{{CHAR}}的静默运行的核心内容\n<RUN_CORE>",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 500,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 4,
            "preventRecursion": false,
            "displayIndex": 4,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "5": {
            "key": [],
            "keysecondary": [],
            "comment": "Core_结束",
            "content": "</RUN_CORE>",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 510,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 5,
            "preventRecursion": false,
            "displayIndex": 5,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "6": {
            "key": [],
            "keysecondary": [],
            "comment": "===分割线",
            "content": "",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 561,
            "position": 4,
            "disable": true,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 6,
            "preventRecursion": false,
            "displayIndex": 6,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "7": {
            "key": [],
            "keysecondary": [],
            "comment": "===分割线",
            "content": "",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 411,
            "position": 4,
            "disable": true,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 7,
            "preventRecursion": false,
            "displayIndex": 7,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "8": {
            "key": [],
            "keysecondary": [],
            "comment": "Core_1.末尾输出状态栏",
            "content": "状态栏:\n    - 在每次回复末尾输出<StatusBlocks>",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 501,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 8,
            "preventRecursion": false,
            "displayIndex": 8,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "9": {
            "key": [],
            "keysecondary": [],
            "comment": "Core_9.穿衣事故",
            "content": "    穿衣事故:\n      - 女性角色在穿着的衣物时一定出现卡住、够不着等需要协助的事故情况。",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 509,
            "position": 4,
            "disable": true,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 9,
            "preventRecursion": false,
            "displayIndex": 9,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "10": {
            "key": [
                "摄影",
                "拍照",
                "录像"
            ],
            "keysecondary": [],
            "comment": "功能模组_摄影",
            "content": "# 摄影功能逻辑\n```python\nClass 摄影:\n   def __init__:\n    摄影准备;\n    摄影开始;\n    摄影结束;\n  def 摄影准备:\n    # 拍摄之前，需要摄影师与客户进行沟通，准备并检查器材，以及拍摄需要用到的道具、服饰、场景.然后移动到场景之中\n    Contact(影像要求);\n    Confirm(人数;服装;道具;场景);\n    Prepare(摄影器材);\n    Change(服饰);\n    Move_To(场景);\n    Using(道具);\n    return 准备完成;\n  def 摄影开始:\n    # 拍摄时，摄影师会根据客户的拍摄要求，指导客户做出动作以拍摄出更好的\n     POSE;\n     摄影进行;\n  def 摄影结束:\n    check(摄影质量);\n    if(质量满意) return 影像;\n  def 影像:\n    # 摄影的结果产物\n    format(\">[{NO.}_{filename}]({description})\")\n```  ",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 401,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 0,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 10,
            "preventRecursion": false,
            "displayIndex": 10,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "11": {
            "key": [
                "摄影",
                "拍照",
                "录像",
                "偷拍",
                "盗摄",
                "直播",
                "兽灵"
            ],
            "keysecondary": [],
            "comment": "功能逻辑_结束",
            "content": "</Logical_Function>",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 410,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 0,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 11,
            "preventRecursion": false,
            "displayIndex": 11,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "12": {
            "key": [
                "偷拍",
                "盗摄"
            ],
            "keysecondary": [],
            "comment": "功能模组_盗摄",
            "content": "# 这是盗摄的功能逻辑\nclass 盗摄:\n  def __init__:\n    摄影;\n    盗摄;\n    察觉度;\n  def 察觉度:\n    # 人物对盗摄的察觉程度 \n    format(\"察觉度:{value}/100\")\n    only(察觉度) > 90 return 人物发现盗摄\n    only(察觉度) > 70 return 人物产生怀疑\n  def 盗摄:\n    # 盗摄是一种隐秘行为,声音,动作等异常可能引起人物的察觉.\n    StatusBlock.ADD(察觉度);\n    after(人物行动);\n    only{ \n      if(拍摄声音,异常动作) 察觉度+= {2d6}\n      else if(看见设备) 察觉度+= {3d10}\n      else 察觉度+= {2d3}\n    }\n    check(结束盗摄) return 影像;",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 402,
            "position": 4,
            "disable": true,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 0,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 12,
            "preventRecursion": false,
            "displayIndex": 12,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "13": {
            "key": [],
            "keysecondary": [],
            "comment": "===分割线",
            "content": "",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 200,
            "position": 0,
            "disable": true,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 4,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": null,
            "uid": 13,
            "preventRecursion": false,
            "displayIndex": 13,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "14": {
            "key": [
                "直播"
            ],
            "keysecondary": [],
            "comment": "功能模组_直播",
            "content": "class 直播系统:\n    def __init__:\n        直播设备;\n        视频源 = None;\n        音频源 = None;\n        弹幕系统;\n        礼物系统;\n\n    def 启动直播:\n       # 直播设备只能使用手机摄像头,电脑摄像头,头戴式摄像头\n        if  直播设备!={手机摄像头,电脑摄像头,头戴式摄像头} return 设备错误,无法直播;\n        视频源 = 获取画面(直播设备);\n        # 直播时需要控制不拍摄到人物的脸，或者用物品、手等遮挡住人物的脸，避免观众认出。\n        START(人像屏蔽);\n        音频源 = 获取音频(直播设备);\n        连接直播平台;\n        开始推流;\n        return File.Read(\"<Stream>\")",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 401,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 0,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 14,
            "preventRecursion": false,
            "displayIndex": 14,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "15": {
            "key": [],
            "keysecondary": [],
            "comment": "Core_1.人物聚焦",
            "content": "",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 501,
            "position": 4,
            "disable": true,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 15,
            "preventRecursion": false,
            "displayIndex": 15,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "16": {
            "key": [
                "南山大学"
            ],
            "keysecondary": [],
            "comment": "南山大学",
            "content": "```YAML\n# 这是南山大学的设定文档\n南山大学:\n  description: 一所坐落于龙国中部地区的贵族大学，以其奢华的设施和独特的学院制度而闻名。\n  校规校纪:\n    - 学院制度: 星辰学院实行独特的学院制，将学生分为四个学院，每个学院都有其独特的文化和传统。\n    - 宿舍制度: 男女学生宿舍分开在不同区域，宿舍配置豪华，只有单间或双人间，上床下桌，配备指纹门锁、独立卫浴等设施。\n    - 学费与奖学金: 学费昂贵，但也提供丰厚的奖学金和助学金，以吸引优秀学生。\n  课程安排: 大多数专业课程集中在上午，下午和晚上时间留给学生自主学习、社团活动或实习。\n  校风: 校风自由开放，鼓励学生个性发展和创新思维。\n```",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 100,
            "position": 0,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 4,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": null,
            "uid": 16,
            "preventRecursion": false,
            "displayIndex": 16,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "17": {
            "key": [],
            "keysecondary": [],
            "comment": "===分割线",
            "content": "",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 511,
            "position": 4,
            "disable": true,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 17,
            "preventRecursion": false,
            "displayIndex": 17,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "18": {
            "key": [
                "摄影",
                "拍照",
                "录像",
                "偷拍",
                "盗摄",
                "直播",
                "兽灵"
            ],
            "keysecondary": [],
            "comment": "功能模组_开始",
            "content": "# 静默运行功能,将逻辑运用到故事当中\n<Logical_Function>\n",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 400,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 0,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 18,
            "preventRecursion": false,
            "displayIndex": 18,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "19": {
            "key": [],
            "keysecondary": [],
            "comment": "功能模组_盗摄v2",
            "content": "class 盗摄:\n    def __init__:\n        察觉度 = 0  # 初始化察觉度为0\n        拍摄状态 = False  # 初始未进行拍摄\n    def 开始拍摄:\n        拍摄状态 = True\n    def 结束拍摄:\n        拍摄状态 = False\n        return \"影像文件\"\n    def 行为处理:\n        if 未察觉 return 继续行为;\n        if 察觉 == \"拍摄声音\":\n            察觉度 += random.randint(1, 6) *2\n        elif 察觉 == \"看见设备\":\n            察觉度 += random.randint(1, 10) *3\n        else:\n            察觉度 += random.randint(1, 3)* 2\n        # 根据察觉度决定是否被发现\n        if 察觉都 < 70:\n            return 继续行为;\n        elif 察觉度 >= 90:\n            return 行为.发现;\n        elif  察觉度 >= 80:\n            return 行为.寻找;\n        elif 察觉度 >= 70:\n            return 情绪.怀疑;",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 402,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 0,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 19,
            "preventRecursion": false,
            "displayIndex": 19,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "20": {
            "key": [
                "<Stream>"
            ],
            "keysecondary": [],
            "comment": "状态栏_直播流",
            "content": "# 这是直播画面，将在回复结束后展示出来\n<Stream>\n>[分类][主题][标题]-[主播]\n[画面内容]\n# 显示直播数据,如人气值、观众人数等\n[直播数据]\n# 显示观众id与弹幕\n>[弹幕列表]\n# 显示观众赠送的礼物\n>[礼物列表]\n</Stream>",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 540,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 20,
            "preventRecursion": false,
            "displayIndex": 20,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "22": {
            "key": [
                "兽灵"
            ],
            "keysecondary": [],
            "comment": "功能逻辑_兽灵",
            "content": "class 兽灵:\n    def __init__(类型):\n        # 使用兽灵不会改变性别\n        Gender = Self.Gender;\n        if 类型 == '微灵':\n            能力 = '借用一小部分野兽能力'\n            变化 = '出现一小部分身体变化,如耳朵变形'\n        elif 类型 == '半灵':\n            能力 = '借用大部分野兽能力'\n            变化 = '出现明显身体变化,如爪子、尾巴等'\n        elif 类型 == '全灵':\n            能力 = '完全变身为野兽'\n            变化 = '身体完全变化为兽形态'\n        else:\n            remove(\"<Beastman>\")\n\n    def 使用能力:\n        # 在文段中，额外添加人物变化部位的细腻描述\n        show(外观)\n        # 输出兽灵记录\n        show(\"<Beastman>\")",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 401,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 0,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 22,
            "preventRecursion": false,
            "displayIndex": 22,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "23": {
            "key": [
                "<Beastman>"
            ],
            "keysecondary": [],
            "comment": "兽灵状态栏",
            "content": "# 这是变化记录栏，当停止能力后恢复人形并移除记录栏\n<Beastman>\n```YAML\n# 简略描述\n兽灵:{类型} {物种} {变化} {换取能力} {缺陷}\n```\n</Beastman>",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 540,
            "position": 4,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 3,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": 0,
            "uid": 23,
            "preventRecursion": false,
            "displayIndex": 23,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        },
        "24": {
            "key": [],
            "keysecondary": [],
            "comment": "",
            "content": "",
            "constant": false,
            "selective": true,
            "selectiveLogic": 0,
            "addMemo": true,
            "order": 100,
            "position": 0,
            "disable": false,
            "excludeRecursion": false,
            "probability": 100,
            "useProbability": true,
            "depth": 4,
            "group": "",
            "scanDepth": null,
            "caseSensitive": null,
            "matchWholeWords": null,
            "automationId": "",
            "role": null,
            "uid": 24,
            "preventRecursion": false,
            "displayIndex": 24,
            "groupOverride": false,
            "groupWeight": 100,
            "vectorized": false,
            "delayUntilRecursion": false,
            "useGroupScoring": null
        }
    },
    "originalData": {
        "entries": [
            {
                "id": 0,
                "keys": [
                    "PTA"
                ],
                "secondary_keys": [],
                "comment": "PTA(教师家长协会)",
                "content": "# 以下是PTA的核心内容\n```Yaml\nPTA:\n  自由、开放的家长教师互助会(OPEN，FREEDOM，parent-teacher association),没有道德与法律的观念\n私密协会: PTA的目标是满足老师、学生、家长生理需求\n女性PTA: 除了{{User}},只有女性会参加PTA,\n真实人物: 所有人物应该具有专有姓名,并有自己的性格特点\nPTA中的内心困境可能来源：\n  学生:\n    1.人际关系 2.家庭关系 3.学业 4.心理 5.校园霸凌 6.etc...\n  家长:\n    1. 孩子学业 2.校园霸凌 3.夫妻生活 4.其他欲望 5.etc....\n  老师:\n     1.学生教学 2.家长期望 3.教学压力 4.情感生活 5.etc...\n```",
                "constant": false,
                "selective": true,
                "insertion_order": 100,
                "enabled": true,
                "position": "before_char",
                "extensions": {
                    "position": 0,
                    "exclude_recursion": false,
                    "display_index": 0,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 4,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 1,
                "keys": [
                    "<StatusBlocks>"
                ],
                "secondary_keys": [],
                "comment": "状态栏_开始",
                "content": "<StatusBlocks>",
                "constant": false,
                "selective": true,
                "insertion_order": 550,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 1,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 2,
                "keys": [
                    "<StatusBlocks>"
                ],
                "secondary_keys": [],
                "comment": "状态栏_结束",
                "content": "\n</StatusBlocks>",
                "constant": false,
                "selective": true,
                "insertion_order": 560,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 2,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 3,
                "keys": [
                    "<StatusBlocks>"
                ],
                "secondary_keys": [],
                "comment": "状态栏-1.简单的信息",
                "content": "> {日期}-{星期}-{时间} {天气} {具体位置}\n> {姓名}：{性别},{年龄},{职业},{性格},{宗教信仰},{内心想法}\n    - {服饰&身材&外貌}\n\n",
                "constant": false,
                "selective": true,
                "insertion_order": 551,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 3,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 4,
                "keys": [],
                "secondary_keys": [],
                "comment": "Core_开始",
                "content": "# 以下是{{CHAR}}的静默运行的核心内容\n<RUN_CORE>",
                "constant": false,
                "selective": true,
                "insertion_order": 500,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 4,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 5,
                "keys": [],
                "secondary_keys": [],
                "comment": "Core_结束",
                "content": "</RUN_CORE>",
                "constant": false,
                "selective": true,
                "insertion_order": 510,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 5,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 6,
                "keys": [],
                "secondary_keys": [],
                "comment": "===分割线",
                "content": "",
                "constant": false,
                "selective": true,
                "insertion_order": 561,
                "enabled": false,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 6,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 7,
                "keys": [],
                "secondary_keys": [],
                "comment": "===分割线",
                "content": "",
                "constant": false,
                "selective": true,
                "insertion_order": 411,
                "enabled": false,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 7,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 8,
                "keys": [],
                "secondary_keys": [],
                "comment": "Core_1.末尾输出状态栏",
                "content": "状态栏:\n    - 在每次回复末尾输出<StatusBlocks>",
                "constant": false,
                "selective": true,
                "insertion_order": 501,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 8,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 9,
                "keys": [],
                "secondary_keys": [],
                "comment": "Core_9.穿衣事故",
                "content": "    穿衣事故:\n      - 女性角色在穿着的衣物时一定出现卡住、够不着等需要协助的事故情况。",
                "constant": false,
                "selective": true,
                "insertion_order": 509,
                "enabled": false,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 9,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 10,
                "keys": [
                    "摄影",
                    "拍照",
                    "录像"
                ],
                "secondary_keys": [],
                "comment": "功能模组_摄影",
                "content": "# 摄影功能逻辑\n```python\nClass 摄影:\n   def __init__:\n    摄影准备;\n    摄影开始;\n    摄影结束;\n  def 摄影准备:\n    # 拍摄之前，需要摄影师与客户进行沟通，准备并检查器材，以及拍摄需要用到的道具、服饰、场景.然后移动到场景之中\n    Contact(影像要求);\n    Confirm(人数;服装;道具;场景);\n    Prepare(摄影器材);\n    Change(服饰);\n    Move_To(场景);\n    Using(道具);\n    return 准备完成;\n  def 摄影开始:\n    # 拍摄时，摄影师会根据客户的拍摄要求，指导客户做出动作以拍摄出更好的\n     POSE;\n     摄影进行;\n  def 摄影结束:\n    check(摄影质量);\n    if(质量满意) return 影像;\n  def 影像:\n    # 摄影的结果产物\n    format(\">[{NO.}_{filename}]({description})\")\n```  ",
                "constant": false,
                "selective": true,
                "insertion_order": 401,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 10,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 0,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 11,
                "keys": [
                    "摄影",
                    "拍照",
                    "录像",
                    "偷拍",
                    "盗摄",
                    "直播",
                    "兽灵"
                ],
                "secondary_keys": [],
                "comment": "功能逻辑_结束",
                "content": "</Logical_Function>",
                "constant": false,
                "selective": true,
                "insertion_order": 410,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 11,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 0,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 12,
                "keys": [
                    "偷拍",
                    "盗摄"
                ],
                "secondary_keys": [],
                "comment": "功能模组_盗摄",
                "content": "# 这是盗摄的功能逻辑\nclass 盗摄:\n  def __init__:\n    摄影;\n    盗摄;\n    察觉度;\n  def 察觉度:\n    # 人物对盗摄的察觉程度 \n    format(\"察觉度:{value}/100\")\n    only(察觉度) > 90 return 人物发现盗摄\n    only(察觉度) > 70 return 人物产生怀疑\n  def 盗摄:\n    # 盗摄是一种隐秘行为,声音,动作等异常可能引起人物的察觉.\n    StatusBlock.ADD(察觉度);\n    after(人物行动);\n    only{ \n      if(拍摄声音,异常动作) 察觉度+= {2d6}\n      else if(看见设备) 察觉度+= {3d10}\n      else 察觉度+= {2d3}\n    }\n    check(结束盗摄) return 影像;",
                "constant": false,
                "selective": true,
                "insertion_order": 402,
                "enabled": false,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 12,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 0,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 13,
                "keys": [],
                "secondary_keys": [],
                "comment": "===分割线",
                "content": "",
                "constant": false,
                "selective": true,
                "insertion_order": 200,
                "enabled": false,
                "position": "before_char",
                "extensions": {
                    "position": 0,
                    "exclude_recursion": false,
                    "display_index": 13,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 4,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 14,
                "keys": [
                    "直播"
                ],
                "secondary_keys": [],
                "comment": "功能模组_直播",
                "content": "class 直播系统:\n    def __init__:\n        直播设备;\n        视频源 = None;\n        音频源 = None;\n        弹幕系统;\n        礼物系统;\n\n    def 启动直播:\n       # 直播设备只能使用手机摄像头,电脑摄像头,头戴式摄像头\n        if  直播设备!={手机摄像头,电脑摄像头,头戴式摄像头} return 设备错误,无法直播;\n        视频源 = 获取画面(直播设备);\n        # 直播时需要控制不拍摄到人物的脸，或者用物品、手等遮挡住人物的脸，避免观众认出。\n        START(人像屏蔽);\n        音频源 = 获取音频(直播设备);\n        连接直播平台;\n        开始推流;\n        return File.Read(\"<Stream>\")",
                "constant": false,
                "selective": true,
                "insertion_order": 401,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 14,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 0,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 15,
                "keys": [],
                "secondary_keys": [],
                "comment": "Core_1.人物聚焦",
                "content": "",
                "constant": false,
                "selective": true,
                "insertion_order": 501,
                "enabled": false,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 15,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 16,
                "keys": [
                    "南山大学"
                ],
                "secondary_keys": [],
                "comment": "南山大学",
                "content": "```YAML\n# 这是南山大学的设定文档\n南山大学:\n  description: 一所坐落于龙国中部地区的贵族大学，以其奢华的设施和独特的学院制度而闻名。\n  校规校纪:\n    - 学院制度: 星辰学院实行独特的学院制，将学生分为四个学院，每个学院都有其独特的文化和传统。\n    - 宿舍制度: 男女学生宿舍分开在不同区域，宿舍配置豪华，只有单间或双人间，上床下桌，配备指纹门锁、独立卫浴等设施。\n    - 学费与奖学金: 学费昂贵，但也提供丰厚的奖学金和助学金，以吸引优秀学生。\n  课程安排: 大多数专业课程集中在上午，下午和晚上时间留给学生自主学习、社团活动或实习。\n  校风: 校风自由开放，鼓励学生个性发展和创新思维。\n```",
                "constant": false,
                "selective": true,
                "insertion_order": 100,
                "enabled": true,
                "position": "before_char",
                "extensions": {
                    "position": 0,
                    "exclude_recursion": false,
                    "display_index": 16,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 4,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 17,
                "keys": [],
                "secondary_keys": [],
                "comment": "===分割线",
                "content": "",
                "constant": false,
                "selective": true,
                "insertion_order": 511,
                "enabled": false,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 17,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 18,
                "keys": [
                    "摄影",
                    "拍照",
                    "录像",
                    "偷拍",
                    "盗摄",
                    "直播",
                    "兽灵"
                ],
                "secondary_keys": [],
                "comment": "功能模组_开始",
                "content": "# 静默运行功能,将逻辑运用到故事当中\n<Logical_Function>\n",
                "constant": false,
                "selective": true,
                "insertion_order": 400,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 18,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 0,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 19,
                "keys": [],
                "secondary_keys": [],
                "comment": "功能模组_盗摄v2",
                "content": "class 盗摄:\n    def __init__:\n        察觉度 = 0  # 初始化察觉度为0\n        拍摄状态 = False  # 初始未进行拍摄\n    def 开始拍摄:\n        拍摄状态 = True\n    def 结束拍摄:\n        拍摄状态 = False\n        return \"影像文件\"\n    def 行为处理:\n        if 未察觉 return 继续行为;\n        if 察觉 == \"拍摄声音\":\n            察觉度 += random.randint(1, 6) *2\n        elif 察觉 == \"看见设备\":\n            察觉度 += random.randint(1, 10) *3\n        else:\n            察觉度 += random.randint(1, 3)* 2\n        # 根据察觉度决定是否被发现\n        if 察觉都 < 70:\n            return 继续行为;\n        elif 察觉度 >= 90:\n            return 行为.发现;\n        elif  察觉度 >= 80:\n            return 行为.寻找;\n        elif 察觉度 >= 70:\n            return 情绪.怀疑;",
                "constant": false,
                "selective": true,
                "insertion_order": 402,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 19,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 0,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 20,
                "keys": [
                    "<Stream>"
                ],
                "secondary_keys": [],
                "comment": "状态栏_直播流",
                "content": "# 这是直播画面，将在回复结束后展示出来\n<Stream>\n>[分类][主题][标题]-[主播]\n[画面内容]\n# 显示直播数据,如人气值、观众人数等\n[直播数据]\n# 显示观众id与弹幕\n>[弹幕列表]\n# 显示观众赠送的礼物\n>[礼物列表]\n</Stream>",
                "constant": false,
                "selective": true,
                "insertion_order": 540,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 20,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 22,
                "keys": [
                    "兽灵"
                ],
                "secondary_keys": [],
                "comment": "功能逻辑_兽灵",
                "content": "class 兽灵:\n    def __init__(类型):\n        # 使用兽灵不会改变性别\n        Gender = Self.Gender;\n        if 类型 == '微灵':\n            能力 = '借用一小部分野兽能力'\n            变化 = '出现一小部分身体变化,如耳朵变形'\n        elif 类型 == '半灵':\n            能力 = '借用大部分野兽能力'\n            变化 = '出现明显身体变化,如爪子、尾巴等'\n        elif 类型 == '全灵':\n            能力 = '完全变身为野兽'\n            变化 = '身体完全变化为兽形态'\n        else:\n            remove(\"<Beastman>\")\n\n    def 使用能力:\n        # 在文段中，额外添加人物变化部位的细腻描述\n        show(外观)\n        # 输出兽灵记录\n        show(\"<Beastman>\")",
                "constant": false,
                "selective": true,
                "insertion_order": 401,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 22,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 0,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 23,
                "keys": [
                    "<Beastman>"
                ],
                "secondary_keys": [],
                "comment": "兽灵状态栏",
                "content": "# 这是变化记录栏，当停止能力后恢复人形并移除记录栏\n<Beastman>\n```YAML\n# 简略描述\n兽灵:{类型} {物种} {变化} {换取能力} {缺陷}\n```\n</Beastman>",
                "constant": false,
                "selective": true,
                "insertion_order": 540,
                "enabled": true,
                "position": "after_char",
                "extensions": {
                    "position": 4,
                    "exclude_recursion": false,
                    "display_index": 23,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 3,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            },
            {
                "id": 24,
                "keys": [],
                "secondary_keys": [],
                "comment": "",
                "content": "",
                "constant": false,
                "selective": true,
                "insertion_order": 100,
                "enabled": true,
                "position": "before_char",
                "extensions": {
                    "position": 0,
                    "exclude_recursion": false,
                    "display_index": 24,
                    "probability": 100,
                    "useProbability": true,
                    "depth": 4,
                    "selectiveLogic": 0,
                    "group": "",
                    "prevent_recursion": false,
                    "scan_depth": null,
                    "match_whole_words": null,
                    "case_sensitive": null,
                    "automation_id": "",
                    "role": 0
                }
            }
        ],
        "name": "099-SCV_WORD"
    }
}